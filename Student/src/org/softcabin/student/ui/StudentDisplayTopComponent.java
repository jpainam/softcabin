/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.softcabin.student.ui;

import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.softcabin.database.DataModel;
import org.softcabin.student.rows.RowHeadersRenderer;
import org.softcabin.student.rows.RowStudentModel;
import org.softcabin.student.rows.RowTableResizer;
import org.softcabin.entities.student.Student;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.softcabin.student.ui//StudentDisplay//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "StudentDisplayTopComponent",
        iconBase = "org/softcabin/student/ui/student_display.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Softcabin/window", 
        id = "org.softcabin.student.ui.StudentDisplayTopComponent")
//@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_StudentDisplayAction",
        preferredID = "StudentDisplayTopComponent")
@Messages({
    "CTL_StudentDisplayAction=StudentDisplay",
    "CTL_StudentDisplayTopComponent=Display Student",
    "HINT_StudentDisplayTopComponent=This window display all registered student"
})
public final class StudentDisplayTopComponent extends TopComponent {
    private InstanceContent content = new InstanceContent();
    
    public StudentDisplayTopComponent() {  
        initComponents();
        gridStudent.setModel(new RowStudentModel());
        /* pour la premiere colonne */
        gridStudent.getColumnModel().getColumn(0).setHeaderValue("N°");
        gridStudent.getColumnModel().getColumn(0).setPreferredWidth(0x2);
        gridStudent.getColumnModel().getColumn(0).setWidth(0x2);
        Dimension d = gridStudent.getPreferredScrollableViewportSize();
        d.width = getPreferredSize().width;
        gridStudent.setPreferredScrollableViewportSize(d);
        gridStudent.setRowHeight(gridStudent.getRowHeight());
        RowHeadersRenderer rowRenderer = new RowHeadersRenderer();
        //gridStudent.setDefaultRenderer(String.class, rowRenderer); // This does not work
        gridStudent.getColumnModel().getColumn(0).setCellRenderer(rowRenderer);
        gridStudent.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        /* Add the resize porperty */
        new RowTableResizer(gridStudent);
        //gridStudent.set
        gridStudent.putClientProperty("print.printable", Boolean.TRUE);
        associateLookup(new AbstractLookup(content));
        /*JTableHeader corner = gridStudent.getTableHeader();
        corner.setReorderingAllowed(true);
        corner.setResizingAllowed(true);*/
        /* auto generate value */
        setName(Bundle.CTL_StudentDisplayTopComponent());
        setToolTipText(Bundle.HINT_StudentDisplayTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        gridStudent = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jtSearch = new javax.swing.JTextField();
        jbSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        gridStudent.setAutoCreateRowSorter(true);
        gridStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        gridStudent.setToolTipText(org.openide.util.NbBundle.getMessage(StudentDisplayTopComponent.class, "StudentDisplayTopComponent.gridStudent.toolTipText")); // NOI18N
        gridStudent.setName(""); // NOI18N
        jScrollPane1.setViewportView(gridStudent);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(StudentDisplayTopComponent.class, "StudentDisplayTopComponent.jLabel1.text")); // NOI18N

        jtSearch.setText(org.openide.util.NbBundle.getMessage(StudentDisplayTopComponent.class, "StudentDisplayTopComponent.jtSearch.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jbSearch, org.openide.util.NbBundle.getMessage(StudentDisplayTopComponent.class, "StudentDisplayTopComponent.jbSearch.text")); // NOI18N
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(StudentDisplayTopComponent.class, "StudentDisplayTopComponent.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSearch))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        ArrayList<Student> student = (ArrayList<Student>) DataModel.searchStudent(jtSearch.getText());
        gridStudent.removeAll();
        gridStudent.setModel(new RowStudentModel(student));
        /* pour la premiere colonne */
        gridStudent.getColumnModel().getColumn(0).setHeaderValue("N°");
        gridStudent.getColumnModel().getColumn(0).setPreferredWidth(0x2);
        gridStudent.getColumnModel().getColumn(0).setWidth(0x2);
        Dimension d = gridStudent.getPreferredScrollableViewportSize();
        d.width = getPreferredSize().width;
        gridStudent.setPreferredScrollableViewportSize(d);
        gridStudent.setRowHeight(gridStudent.getRowHeight());
        RowHeadersRenderer rowRenderer = new RowHeadersRenderer();
        //gridStudent.setDefaultRenderer(String.class, rowRenderer); // This does not work
        gridStudent.getColumnModel().getColumn(0).setCellRenderer(rowRenderer);
        gridStudent.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        /* Add the resize porperty */
        new RowTableResizer(gridStudent);
        //gridStudent.set
        gridStudent.putClientProperty("print.printable", Boolean.TRUE);
        //associateLookup(new AbstractLookup(content));
    }//GEN-LAST:event_jbSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable gridStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbSearch;
    private javax.swing.JTextField jtSearch;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
